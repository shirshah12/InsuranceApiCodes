<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="6f397b3e-6883-4dbc-86e7-2de4eba06d41" created="3.9.1" activeEnvironment="Test" name="Insurance API" updated="3.9.1" encryptionMode="Not encrypted" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer><con:oAuth2Profile><con:name>Bearer Token</con:name><con:type>OAuth 2.0</con:type><con:accessToken>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjY2NiwiaWF0IjoxNjI4MTE4NDQ5fQ.FuJZsMsfdtUwjJL51MViLFtJC0EMYQcJyZjF6UVS5U8</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>JWT_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth2Profile></con:oAuth2ProfileContainer><con:oAuth1ProfileContainer/><con:reporting/><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:environment id="3f2d8957-1815-46ea-b338-cc3590a39754" name="Test" index="0"><con:service type="REST" name="CreateAccount"><con:endpoint authProfile="Bearer Token" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://www.test-insurance.com</con:endpoint></con:service><con:databaseConnectionContainer/><con:jmsConnectionContainer/></con:environment><con:authRepository><con:oAuth20AuthEntry><con:name>Bearer Token</con:name><con:type>OAuth 2.0</con:type><con:accessToken>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjY2NiwiaWF0IjoxNjI4MTE4NDQ5fQ.FuJZsMsfdtUwjJL51MViLFtJC0EMYQcJyZjF6UVS5U8</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>JWT_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth20AuthEntry></con:authRepository><con:environmentSpec><con:entry environmentId="3f2d8957-1815-46ea-b338-cc3590a39754"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:tags/></con:soapui-project>